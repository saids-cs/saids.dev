@use 'variables' as vars;

* { // Global reset and font
    font-family: "iMWriting Nerd Font", "Symbols Nerd Font"; // default fonts
    box-sizing: border-box; // Include padding and border in width/height
    margin: 0; // Remove default margin
    padding: 0; // Remove default padding
}

body { // Body styles
    font-family: 'iMWriting Nerd Font', 'Symbols Nerd Font';
    color: vars.$fontColor; // Main font color
}

header { // Header section
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: vars.$bgColor2; // Secondary background color
    width: 100%;
    min-height: 8vh;

    .hcontent { // Header inner container
        display: flex;
        align-items: center;
        justify-content: space-between;
        min-width: 50%;
        position: relative;

        a { // Links in header (logo/title)
            color: inherit;
            text-decoration: none;
            color: vars.$fontColor;
            h1 {
                text-decoration: none;
                margin: 0;
                margin-right: 8rem; // Spacing from nav
                padding: 0;
                font-weight: bold;
                color: inherit;
                color: vars.$fontColor;
            }
        }

        .menu-toggle { // Menu toggle button (for small screens)
            background: none;
            border: none;
            cursor: pointer;
            display: none; // Hidden by default, shown via media query
            span {
                padding: 1rem;
                color: vars.$fontColor;
            }
        }

        .collapse { // Collapsible nav container
            display: flex;
            visibility: visible;
        }

        .nav { // Navigation links
            display: flex;
            flex-direction: row;
            gap: 1rem;
            list-style: none;
            margin-left: 8rem;
            a {
                text-decoration: none;
                min-width: fit-content;
                text-align: center;
                color: vars.$fontColor;
                position: relative; // Necessary to position the border
                padding-bottom: 0.2rem; // Space for the border

                &::after { // Begins hidden for the elements of <a>
                    content: '';
                    position: absolute;
                    bottom: 0;
                    left: 50%;
                    width: 0; // Begins hidden
                    height: 4px; 
                    background-color: vars.$fontColor;
                    
                    // Apply the transition for the property 'width'
                    background-color: vars.$details;
                    transform: translateX(-50%);
                    transition: width 0.2s ease-out; 
                }
            }

            a:not(.selected):hover::after { // Animation when hovering over the element if it is not the selected one
                width: 100%; // It makes the border slide and appear
            }

            .selected {
                &::after {
                    background-color: vars.$fontColor; 
                    left: 50%; 
                    transform: translateX(-50%);
                    width: 100%; // The border is always visible for the selected element
                }
            }
        }
    }
}

main { // Main content section
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    min-height: 90vh;
    background-color: vars.$bgColor1; // Primary background color
}

footer { // Footer section
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-color: vars.$bgColor2; // Secondary background color
    min-height: auto;
    padding-top: 2rem;
    p {
        margin-left: 2rem;
        margin-right: 2rem;
    }

    .hidden { // Hidden text, just for fun
        padding-top: 1rem;
        margin-left: 2rem;
        margin-right: 2rem;
        color: vars.$bgColor1;
    }
}